@using Model.Entities

@if (Aircraft is null){
    Cancel();
}

<MudDialog Class="altitude-dialog">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Height" Class="mr-3"/> Edit height
        </MudText>
    </TitleContent>
    <DialogContent>
        <p>Current Height: @(Aircraft?.Altitude + 1)</p>
        <p>Current Speed: @(Aircraft?.Speed)</p>
        <MudSlider @bind-Value="Height" TickMarks="true" TickMarkLabels="@_labels" Step="1" Min="1" Max="10"/>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Submit" Class="px-10">Save</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Cancel" Class="px-10">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Aircraft? Aircraft { get; set; }
    
    private readonly string[] _labels = { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" };

    private int Height { get; set; }
    
    protected override void OnInitialized(){
        Height = Aircraft?.Altitude + 1 ?? 1;
        MudDialog.ForceRender();
    }

    void Submit(){
        MudDialog.Close(DialogResult.Ok(Height - 1));
    }
    void Cancel() => MudDialog.Cancel();
}